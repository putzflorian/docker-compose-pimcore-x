#user       www-data www-data;

events {
	worker_connections  4096;  ## Default: 1024
}

http {
	default_type  application/octet-stream;
	include       /etc/nginx/mime.types;

	server {
		listen 80;
		index index.php;
		server_name localhost;
		error_log  /var/log/nginx/error.log;
		access_log /var/log/nginx/access.log;
		root /var/www/html/public;

		# Referrer Policy
	   # add_header Referrer-Policy same-origin;

		add_header Referrer-Policy origin;

		# Feature Policy
		# Browsers feature a set of functionality that could be used
		# Please check how to properly evaluate, define and include to your needs
		# Thanks to: https://fearby.com/article/set-up-feature-policy-referrer-policy-and-content-security-policy-headers-in-nginx/
		# For pre-writing these.
		# Note: Mobile functionalities were explicitly not included.gi
		#add_header Feature-Policy "geolocation 'none';midi 'none';sync-xhr 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none';";

		# set X-Frame-Options
		add_header X-Frame-Options "SAMEORIGIN" always;

		# set Xss-Protection
		add_header X-Xss-Protection "1; mode=block" always;

		# X-Content-Type-Options 
		add_header X-Content-Type-Options "nosniff" always;
		### HTTP Header security
		
		# Filesize depending on your data
		client_max_body_size 10G;

		# Pimcore Head-Link Cache-Busting
		rewrite ^/cache-buster-(?:\d+)/(.*) /$1 last;

		# Stay secure
		#
		# a) don't allow PHP in folders allowing file uploads
		location ~* /var/assets/.*\.php(/|$) {
			return 404;
		}
		# b) Prevent clients from accessing hidden files (starting with a dot)
		# Access to `/.well-known/` is allowed.
		# https://www.mnot.net/blog/2010/04/07/well-known
		# https://tools.ietf.org/html/rfc5785
		location ~* /\.(?!well-known/) {
			deny all;
			log_not_found off;
			access_log off;
		}
		# c) Prevent clients from accessing to backup/config/source files
		location ~* (?:\.(?:bak|conf(ig)?|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
			deny all;
		}

		# Some Admin Modules need this:
		# Database Admin, Server Info
		location ~* ^/admin/(adminer|external) {
			rewrite .* /index.php$is_args$args last;
		}
		
		# Thumbnails
		location ~* .*/(image|video)-thumb__\d+__.* {
			try_files /var/tmp/thumbnails$uri /index.php;
			expires 2w;
			access_log off;
			add_header Cache-Control "public";
		}

		# Assets
		# Still use a whitelist approach to prevent each and every missing asset to go through the PHP Engine.
		location ~* ^(?!/admin/asset/webdav/)(?!/admin)(.+?)\.((?:css|js)(?:\.map)?|jpe?g|gif|png|svgz?|svg|eps|exe|gz|zip|mp\d|ogg|ogv|mpd|m3u8|mov|m4v|webm|pdf|docx?|xlsx?|pptx?)$ {
			try_files /var/assets$uri $uri =404;
			expires 2w;
			access_log off;
			log_not_found off;
			add_header Cache-Control "public";
		}

		location / {
			error_page 404 /meta/404;
			try_files $uri /index.php$is_args$args;
		}

		location ~ ^/index\.php(/|$) {
			send_timeout 1800;
			fastcgi_read_timeout 1800;
			# regex to split $uri to $fastcgi_script_name and $fastcgi_path
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			# Check that the PHP script exists before passing it
			try_files $fastcgi_script_name =404;
			# include fastcgi.conf if needed
			#include fastcgi.conf;
			include fastcgi_params;
			# Bypass the fact that try_files resets $fastcgi_path_info
			# see: http://trac.nginx.org/nginx/ticket/321
	#        set $path_info $fastcgi_path_info;
	#        fastcgi_param PATH_INFO $path_info;

			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param PATH_INFO $fastcgi_path_info;

			# Activate these, if using Symlinks and opcache
			# fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
			# fastcgi_param DOCUMENT_ROOT $realpath_root;

			fastcgi_pass pimcorex-php-fpm-debug:9000;
			# Prevents URIs that include the front controller. This will 404:
			# http://domain.tld/app.php/some-path
			# Remove the internal directive to allow URIs like this
			internal;
		}


		# PHP-FPM Status and Ping
		location /fpm- {
			access_log off;
			include fastcgi_params;
			location /fpm-status {
				allow 127.0.0.1;
				# add additional IP's or Ranges
			   # deny all;
				fastcgi_pass pimcorex-php-fpm-debug:9000;
			}
			location /fpm-ping {
				fastcgi_pass pimcorex-php-fpm-debug:9000;
			}
		}
		# nginx Status
		# see: https://nginx.org/en/docs/http/ngx_http_stub_status_module.html
		location /nginx-status {
			allow 127.0.0.1;
			deny all;
			access_log off;
			stub_status;
		}

	}
}